{
    "data" : [
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "plotPCA3 <- function (datos, labels, factor, title, scale, size = 1.5, glineas = 0.25) {",
        "+ ",
        "  data <- prcomp(t(datos), scale = scale)",
        "+ ",
        "  ",
        "+ ",
        "  # plot adjustments",
        "+ ",
        "  ",
        "+ ",
        "  dataDf <- data.frame(data$x)",
        "+ ",
        "  Group <- factor",
        "+ ",
        "  loads <- round(data$sdev^2/sum(data$sdev^2) * 100, 1)",
        "+ ",
        "  ",
        "+ ",
        "  # main plot",
        "+ ",
        "  ",
        "+ ",
        "  p1 <- ggplot(data = dataDf, aes(x = PC1, y = PC2)) +",
        "+ ",
        "    theme_classic() +",
        "+ ",
        "    geom_hline(yintercept = 0, color = \"gray70\") +",
        "+ ",
        "    geom_vline(xintercept = 0, color = \"gray70\") +",
        "+ ",
        "    geom_point(aes(color = Group), size = 2) +",
        "+ ",
        "    coord_cartesian(xlim = c(min(data$x[ , 1]) - 5, max(data$x[ , 1]) + 5)) +",
        "+ ",
        "    scale_fill_discrete(name = \"Group\") +",
        "+ ",
        "    theme(axis.title.y = element_text(size = 10,",
        "+ ",
        "                                      margin = margin(t = 0, r = 10, b = 0, l = 0)),",
        "+ ",
        "          axis.title.x = element_text(size = 10,",
        "+ ",
        "                                      margin = margin(t = 10, r = 0, b = 0, l = 0)),",
        "+ ",
        "          axis.text = element_text(size = 7), ",
        "+ ",
        "          legend.text = element_text(size = 6),",
        "+ ",
        "          legend.title = element_text(size = 8),",
        "+ ",
        "          legend.key.size = unit(0.5, \"cm\"),",
        "+ ",
        "          legend.key.width = unit(0.5,\"cm\")) ",
        "+ ",
        "  ",
        "+ ",
        "  # avoiding labels superposition",
        "+ ",
        "  ",
        "+ ",
        "  p1 + geom_text_repel(aes(y = PC2 + 0.25, label = labels), segment.size = 0.25, size = size) + ",
        "+ ",
        "    labs(x = c(paste(\"PC1\", loads[1], \"%\")), y = c(paste(\"PC2\", loads[2], \"%\"))) +  ",
        "+ ",
        "    ggtitle(paste(\"Principal Component Analysis for: \", title, sep = \" \")) + ",
        "+ ",
        "    theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "    scale_color_viridis(discrete = T)",
        "+ ",
        "}",
        "> ",
        "tiff(\"figures/PCA_RawData.tiff\", ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     width = 7, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     units = 'in')",
        "> ",
        "",
        "> ",
        "plotPCA3(datos = exprs(raw_data), ",
        "+ ",
        "         labels = targets_file$ShortName, ",
        "+ ",
        "         factor = targets_file$Group, ",
        "+ ",
        "         title = \"Raw data\", ",
        "+ ",
        "         scale = F, ",
        "+ ",
        "         size = 1.5)",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "plotPCA3 <- function (datos, labels, factor, title, scale, size = 1.5, glineas = 0.25) {",
        "+ ",
        "  data <- prcomp(t(datos), scale = scale)",
        "+ ",
        "  ",
        "+ ",
        "  # plot adjustments",
        "+ ",
        "  ",
        "+ ",
        "  dataDf <- data.frame(data$x)",
        "+ ",
        "  Group <- factor",
        "+ ",
        "  loads <- round(data$sdev^2/sum(data$sdev^2) * 100, 1)",
        "+ ",
        "  ",
        "+ ",
        "  # main plot",
        "+ ",
        "  ",
        "+ ",
        "  p1 <- ggplot(data = dataDf, aes(x = PC1, y = PC2)) +",
        "+ ",
        "    theme_classic() +",
        "+ ",
        "    geom_hline(yintercept = 0, color = \"gray70\") +",
        "+ ",
        "    geom_vline(xintercept = 0, color = \"gray70\") +",
        "+ ",
        "    geom_point(aes(color = Group), size = 2) +",
        "+ ",
        "    coord_cartesian(xlim = c(min(data$x[ , 1]) - 5, max(data$x[ , 1]) + 5)) +",
        "+ ",
        "    scale_fill_discrete(name = \"Group\") +",
        "+ ",
        "    theme(axis.title.y = element_text(size = 10,",
        "+ ",
        "                                      margin = margin(t = 0, r = 10, b = 0, l = 0)),",
        "+ ",
        "          axis.title.x = element_text(size = 10,",
        "+ ",
        "                                      margin = margin(t = 10, r = 0, b = 0, l = 0)),",
        "+ ",
        "          axis.text = element_text(size = 7), ",
        "+ ",
        "          legend.text = element_text(size = 6),",
        "+ ",
        "          legend.title = element_text(size = 8),",
        "+ ",
        "          legend.key.size = unit(0.25, \"cm\"),",
        "+ ",
        "          legend.key.width = unit(0.5,\"cm\")) ",
        "+ ",
        "  ",
        "+ ",
        "  # avoiding labels superposition",
        "+ ",
        "  ",
        "+ ",
        "  p1 + geom_text_repel(aes(y = PC2 + 0.25, label = labels), segment.size = 0.25, size = size) + ",
        "+ ",
        "    labs(x = c(paste(\"PC1\", loads[1], \"%\")), y = c(paste(\"PC2\", loads[2], \"%\"))) +  ",
        "+ ",
        "    ggtitle(paste(\"Principal Component Analysis for: \", title, sep = \" \")) + ",
        "+ ",
        "    theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "    scale_color_viridis(discrete = T)",
        "+ ",
        "}",
        "> ",
        "tiff(\"figures/PCA_RawData.tiff\", ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     width = 7, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     units = 'in')",
        "> ",
        "",
        "> ",
        "plotPCA3(datos = exprs(raw_data), ",
        "+ ",
        "         labels = targets_file$ShortName, ",
        "+ ",
        "         factor = targets_file$Group, ",
        "+ ",
        "         title = \"Raw data\", ",
        "+ ",
        "         scale = F, ",
        "+ ",
        "         size = 1.5)",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "plotPCA3 <- function (datos, labels, factor, title, scale, size = 1.5, glineas = 0.25) {",
        "+ ",
        "  data <- prcomp(t(datos), scale = scale)",
        "+ ",
        "  ",
        "+ ",
        "  # plot adjustments",
        "+ ",
        "  ",
        "+ ",
        "  dataDf <- data.frame(data$x)",
        "+ ",
        "  Group <- factor",
        "+ ",
        "  loads <- round(data$sdev^2/sum(data$sdev^2) * 100, 1)",
        "+ ",
        "  ",
        "+ ",
        "  # main plot",
        "+ ",
        "  ",
        "+ ",
        "  p1 <- ggplot(data = dataDf, aes(x = PC1, y = PC2)) +",
        "+ ",
        "    theme_classic() +",
        "+ ",
        "    geom_hline(yintercept = 0, color = \"gray70\") +",
        "+ ",
        "    geom_vline(xintercept = 0, color = \"gray70\") +",
        "+ ",
        "    geom_point(aes(color = Group), size = 2) +",
        "+ ",
        "    coord_cartesian(xlim = c(min(data$x[ , 1]) - 5, max(data$x[ , 1]) + 5)) +",
        "+ ",
        "    scale_fill_discrete(name = \"Group\") +",
        "+ ",
        "    theme(axis.title.y = element_text(size = 10,",
        "+ ",
        "                                      margin = margin(t = 0, r = 10, b = 0, l = 0)),",
        "+ ",
        "          axis.title.x = element_text(size = 10,",
        "+ ",
        "                                      margin = margin(t = 10, r = 0, b = 0, l = 0)),",
        "+ ",
        "          axis.text = element_text(size = 7), ",
        "+ ",
        "          legend.text = element_text(size = 6),",
        "+ ",
        "          legend.title = element_text(size = 8),",
        "+ ",
        "          legend.key.size = unit(0.4, \"cm\"),",
        "+ ",
        "          legend.key.width = unit(0.5,\"cm\")) ",
        "+ ",
        "  ",
        "+ ",
        "  # avoiding labels superposition",
        "+ ",
        "  ",
        "+ ",
        "  p1 + geom_text_repel(aes(y = PC2 + 0.25, label = labels), segment.size = 0.25, size = size) + ",
        "+ ",
        "    labs(x = c(paste(\"PC1\", loads[1], \"%\")), y = c(paste(\"PC2\", loads[2], \"%\"))) +  ",
        "+ ",
        "    ggtitle(paste(\"Principal Component Analysis for: \", title, sep = \" \")) + ",
        "+ ",
        "    theme(plot.title = element_text(hjust = 0.5)) +",
        "+ ",
        "    scale_color_viridis(discrete = T)",
        "+ ",
        "}",
        "> ",
        "tiff(\"figures/PCA_RawData.tiff\", ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     width = 7, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     units = 'in')",
        "> ",
        "",
        "> ",
        "plotPCA3(datos = exprs(raw_data), ",
        "+ ",
        "         labels = targets_file$ShortName, ",
        "+ ",
        "         factor = targets_file$Group, ",
        "+ ",
        "         title = \"Raw data\", ",
        "+ ",
        "         scale = F, ",
        "+ ",
        "         size = 1.5)",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "tiff(filename = \"figures/Intensity_RawData.tiff\", ",
        "+ ",
        "     width = 5.5, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     units = \"in\")",
        "> ",
        "",
        "> ",
        "boxplot(x = raw_data, ",
        "+ ",
        "        cex.axis = 0.5, ",
        "+ ",
        "        las = 2, ",
        "+ ",
        "        which = \"all\", ",
        "+ ",
        "        col = c(rep(\"gray7\", 3),",
        "+ ",
        "                rep(\"#440154FF\", 3), ",
        "+ ",
        "                rep(\"#453781FF\", 3), ",
        "+ ",
        "                rep(\"#33638DFF\", 3), ",
        "+ ",
        "                rep(\"#238A8DFF\", 3),",
        "+ ",
        "                rep(\"#20A387FF\", 3), ",
        "+ ",
        "                rep(\"#55C667FF\", 3), ",
        "+ ",
        "                rep(\"#B8DE29FF\", 3), ",
        "+ ",
        "                rep(\"#FDE725FF\", 3)),",
        "+ ",
        "        main = \"Distribution of raw intensity values\", ",
        "+ ",
        "        ylab = \"Intensity\")",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "tiff(filename = \"figures/Intensity_RawData.tiff\", ",
        "+ ",
        "     width = 5.5, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     units = \"in\")",
        "> ",
        "",
        "> ",
        "boxplot(x = raw_data, ",
        "+ ",
        "        cex.axis = 0.5, ",
        "+ ",
        "        las = 2, ",
        "+ ",
        "        which = \"all\", ",
        "+ ",
        "        col = c(rep(\"gray7\", 3),",
        "+ ",
        "                rep(\"#440154FF\", 3), ",
        "+ ",
        "                rep(\"#453781FF\", 3), ",
        "+ ",
        "                rep(\"#33638DFF\", 3), ",
        "+ ",
        "                rep(\"#238A8DFF\", 3),",
        "+ ",
        "                rep(\"#20A387FF\", 3), ",
        "+ ",
        "                rep(\"#55C667FF\", 3), ",
        "+ ",
        "                rep(\"#B8DE29FF\", 3), ",
        "+ ",
        "                rep(\"#FDE725FF\", 3)),",
        "+ ",
        "        main = \"Distribution of raw intensity values\", ",
        "+ ",
        "        xlab = \"Sample\",",
        "+ ",
        "        ylab = \"Intensity\")",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "raw_data_2 <- raw_data[ , -4]",
        "> ",
        "norm_data <- rma(raw_data_2)",
        "Background correcting\nNormalizing\nCalculating Expression\n",
        "> ",
        "arrayQualityMetrics(expressionset = norm_data, ",
        "+ ",
        "                    outdir = file.path(\"results/\", \"QCDir.Norm\"), ",
        "+ ",
        "                    force = T, ",
        "+ ",
        "                    intgroup = c(\"Group\"))",
        "The report will be written into directory 'results//QCDir.Norm'. \n",
        "There were 26 warnings (use warnings() to see them)",
        "\n",
        "> ",
        "tiff(\"figures/PCA_NormData.tiff\", ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     width = 7, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     units = 'in')",
        "> ",
        "",
        "> ",
        "plotPCA3(datos = exprs(norm_data), ",
        "+ ",
        "         labels = targets_file@data$ShortName[-4], ",
        "+ ",
        "         factor = targets_file@data$Group[-4], ",
        "+ ",
        "         title = \"Normalized data\", ",
        "+ ",
        "         scale = F, ",
        "+ ",
        "         size = 1.5)",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "tiff(filename = \"figures/Intensity_NormData.tiff\", ",
        "+ ",
        "     width = 5.5, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     units = \"in\")",
        "> ",
        "",
        "> ",
        "boxplot(x = norm_data, ",
        "+ ",
        "        cex.axis = 0.5, ",
        "+ ",
        "        las = 2, ",
        "+ ",
        "        which = \"all\", ",
        "+ ",
        "        col = c(rep(\"gray7\", 3),",
        "+ ",
        "                rep(\"#440154FF\", 2), ",
        "+ ",
        "                rep(\"#453781FF\", 3), ",
        "+ ",
        "                rep(\"#33638DFF\", 3), ",
        "+ ",
        "                rep(\"#238A8DFF\", 3),",
        "+ ",
        "                rep(\"#20A387FF\", 3), ",
        "+ ",
        "                rep(\"#55C667FF\", 3), ",
        "+ ",
        "                rep(\"#B8DE29FF\", 3), ",
        "+ ",
        "                rep(\"#FDE725FF\", 3)),",
        "+ ",
        "        main = \"Distribution of raw intensity values\",",
        "+ ",
        "        xlab = \"Samples\",",
        "+ ",
        "        ylab = \"Intensity\")",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "sds <- apply(X = exprs(norm_data), MARGIN = 1, FUN = sd)",
        "> ",
        "sds_0 <- sort(sds)",
        "> ",
        "tiff(filename = \"figures/SDplot.tiff\", ",
        "+ ",
        "     width = 5.5, ",
        "+ ",
        "     height = 4.5, ",
        "+ ",
        "     res = 200, ",
        "+ ",
        "     units = \"in\")",
        "> ",
        "",
        "> ",
        "plot(x = 1:length(sds_0), ",
        "+ ",
        "     y = sds_0, ",
        "+ ",
        "     main = \"Distribution of variability for all genes\", ",
        "+ ",
        "     xlab = \"Gene index (from least to most variable)\", ",
        "+ ",
        "     ylab = \"Standard deviation\", ",
        "+ ",
        "     abline(v = length(sds) * c(0.9, 0.95), ",
        "+ ",
        "            lty = 2))",
        "> ",
        "",
        "> ",
        "dev.off()",
        "pdf \n  3 \n",
        "> ",
        "annotation(norm_data) <- \"mouse4302.db\"",
        "> ",
        "",
        "> ",
        "filtered <- nsFilter(eset = norm_data, ",
        "+ ",
        "                     require.entrez = T, ",
        "+ ",
        "                     remove.dupEntrez = T, ",
        "+ ",
        "                     var.filter = T, ",
        "+ ",
        "                     var.func = IQR, ",
        "+ ",
        "                     var.cutoff = 0.85, ",
        "+ ",
        "                     filterByQuantile = T, ",
        "+ ",
        "                     feature.exclude = \"^AFFX\")",
        "> ",
        "",
        "> ",
        "print(filtered$filter.log)",
        "$numDupsRemoved\n[1] 17418\n\n$numLowVar\n[1] 17431\n\n$numRemoved.ENTREZID\n[1] 7162\n\n$feature.exclude\n[1] 13\n\n",
        "> ",
        "",
        "> ",
        "norm_filtered_data <- filtered$eset",
        "> ",
        "write.csv(x = exprs(raw_data), ",
        "+ ",
        "          file = \"results/raw.Data.csv\")",
        "> ",
        "design_matrix <- model.matrix(object = ~ 0 + Group, ",
        "+ ",
        "                              data = pData(object = norm_filtered_data))",
        "> ",
        "colnames(design_matrix) <- c(\"FR\", \"AC\", \"CT\", \"AR\", \"DHA\",",
        "+ ",
        "                             \"DR\", \"EFA\", \"HF\", \"LAR\")",
        "> ",
        "print(design_matrix)",
        "      FR AC CT AR DHA DR EFA HF LAR\nFR.1   0  0  0  0   0  0   1  0   0\nFR.2   0  0  0  0   0  0   1  0   0\nFR.3   0  0  0  0   0  0   1  0   0\nAC.2   1  0  0  0   0  0   0  0   0\nAC.3   1  0  0  0   0  0   0  0   0\nCT.1   0  0  1  0   0  0   0  0   0\nCT.2   0  0  1  0   0  0   0  0   0\nCT.3   0  0  1  0   0  0   0  0   0\nAR.1   0  1  0  0   0  0   0  0   0\nAR.2   0  1  0  0   0  0   0  0   0\nAR.3   0  1  0  0   0  0   0  0   0\nLAR.1  0  0  0  0   0  0   0  0   1\nLAR.2  0  0  0  0   0  0   0  0   1\nLAR.3  0",
        "  0  0  0   0  0   0  0   1\nDHA.1  0  0  0  1   0  0   0  0   0\nDHA.2  0  0  0  1   0  0   0  0   0\nDHA.3  0  0  0  1   0  0   0  0   0\nDR.1   0  0  0  0   1  0   0  0   0\nDR.2   0  0  0  0   1  0   0  0   0\nDR.3   0  0  0  0   1  0   0  0   0\nEFA.1  0  0  0  0   0  1   0  0   0\nEFA.2  0  0  0  0   0  1   0  0   0\nEFA.3  0  0  0  0   0  1   0  0   0\nHF.1   0  0  0  0   0  0   0  1   0\nHF.2   0  0  0  0   0  0   0  1   0\nHF.3   0  0  0  0   0  0   0  1   0\nattr(,\"assign\")\n[1] 1 1 1 1 1 1 1 1 1\nattr(,\"contrasts\")",
        "\nattr(,\"contrasts\")$Group\n[1] \"contr.treatment\"\n\n",
        "> ",
        "contrast_matrix <- makeContrasts(CTvsDR = CT - FR,",
        "+ ",
        "                                 CTvsAC = CT - AC,",
        "+ ",
        "                                 CTvsAR = CT - AR,",
        "+ ",
        "                                 CTvsDHA = CT - DHA,",
        "+ ",
        "                                 CTvsDR = CT - DR,",
        "+ ",
        "                                 CTvsEFA = CT - EFA,",
        "+ ",
        "                                 CTvsHF = CT - HF,",
        "+ ",
        "                                 CTvsLAR = CT - LAR,",
        "+ ",
        "                                 levels = design_matrix)",
        "> ",
        "print(contrast_matrix)",
        "      Contrasts\nLevels CTvsDR CTvsAC CTvsAR CTvsDHA CTvsDR CTvsEFA CTvsHF CTvsLAR\n   FR      -1      0      0       0      0       0      0       0\n   AC       0     -1      0       0      0       0      0       0\n   CT       1      1      1       1      1       1      1       1\n   AR       0      0     -1       0      0       0      0       0\n   DHA      0      0      0      -1      0       0      0       0\n   DR       0      0      0       0     -1       0      0       0\n   EFA      0      0      0       0",
        "      0      -1      0       0\n   HF       0      0      0       0      0       0     -1       0\n   LAR      0      0      0       0      0       0      0      -1\n",
        "> ",
        "fit <- lmFit(object = eset_filtered, design = designMat)",
        "Error in is(object, \"list\") : objeto 'eset_filtered' no encontrado\n",
        "> ",
        "fit <- lmFit(object = norm_filtered_data, design = designMat)",
        "Error in lmFit(object = norm_filtered_data, design = designMat) : \n  objeto 'designMat' no encontrado\n",
        "> ",
        "fit <- lmFit(object = norm_filtered_data, design = design_mat)",
        "Error in lmFit(object = norm_filtered_data, design = design_mat) : \n  objeto 'design_mat' no encontrado\n",
        "> ",
        "fit <- lmFit(object = norm_filtered_data, design = design_matrix)",
        "> ",
        "fit_main <- contrasts.fit(fit = fit, contrasts = cont.matrix)",
        "Error in contrasts.fit(fit = fit, contrasts = cont.matrix) : \n  objeto 'cont.matrix' no encontrado\n",
        "> ",
        "fit_main <- contrasts.fit(fit = fit, contrasts = contrast_matrix)",
        "> ",
        "fit_main <- eBayes(fit = fit_main)",
        "> ",
        "class(fit_main)",
        "[1] \"MArrayLM\"\nattr(,\"package\")\n[1] \"limma\"\n",
        "> ",
        "top_table_CTvsDR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit.main), ",
        "+ ",
        "                             coef = \"CTvsDR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "Error in nrow(fit.main) : objeto 'fit.main' no encontrado\n",
        "> ",
        "top_table_CTvsDR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsDR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsDR)",
        "                 logFC  AveExpr         t      P.Value    adj.P.Val        B\n1423804_a_at  4.152361 8.974127  13.87326 1.082905e-12 2.596496e-09 18.76142\n1417867_at   -5.570799 4.939195 -13.57872 1.687680e-12 2.596496e-09 18.35935\n1422533_at    3.219092 7.930501  12.77831 5.861392e-12 6.011834e-09 17.22151\n1415993_at    4.830517 8.477170  12.32482 1.218896e-11 9.376360e-09 16.54615\n1423078_a_at  2.581030 9.915283  11.72674 3.303225e-11 2.032804e-08 15.61965\n1427229_at    2.855991 7.272321  10.02405 6.981862e-10",
        " 3.580532e-07 12.74124\n",
        "> ",
        "top_table_CTvsFR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsFR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "Error in fit$coefficients[, coef] : subíndice fuera de  los límites\n",
        "> ",
        "top_table_CTvsFR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsFR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "Error in fit$coefficients[, coef] : subíndice fuera de  los límites\n",
        "> ",
        "contrast_matrix <- makeContrasts(CTvsDR = CT - FR,",
        "+ ",
        "                                 CTvsAC = CT - AC,",
        "+ ",
        "                                 CTvsAR = CT - AR,",
        "+ ",
        "                                 CTvsDHA = CT - DHA,",
        "+ ",
        "                                 CTvsDR = CT - DR,",
        "+ ",
        "                                 CTvsEFA = CT - EFA,",
        "+ ",
        "                                 CTvsHF = CT - HF,",
        "+ ",
        "                                 CTvsLAR = CT - LAR,",
        "+ ",
        "                                 levels = design_matrix)",
        "> ",
        "print(contrast_matrix)",
        "      Contrasts\nLevels CTvsDR CTvsAC CTvsAR CTvsDHA CTvsDR CTvsEFA CTvsHF CTvsLAR\n   FR      -1      0      0       0      0       0      0       0\n   AC       0     -1      0       0      0       0      0       0\n   CT       1      1      1       1      1       1      1       1\n   AR       0      0     -1       0      0       0      0       0\n   DHA      0      0      0      -1      0       0      0       0\n   DR       0      0      0       0     -1       0      0       0\n   EFA      0      0      0       0",
        "      0      -1      0       0\n   HF       0      0      0       0      0       0     -1       0\n   LAR      0      0      0       0      0       0      0      -1\n",
        "> ",
        "top_table_CTvsFR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsFR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "Error in fit$coefficients[, coef] : subíndice fuera de  los límites\n",
        "> ",
        "contrast_matrix <- makeContrasts(CTvsFR = CT - FR,",
        "+ ",
        "                                 CTvsAC = CT - AC,",
        "+ ",
        "                                 CTvsAR = CT - AR,",
        "+ ",
        "                                 CTvsDHA = CT - DHA,",
        "+ ",
        "                                 CTvsDR = CT - DR,",
        "+ ",
        "                                 CTvsEFA = CT - EFA,",
        "+ ",
        "                                 CTvsHF = CT - HF,",
        "+ ",
        "                                 CTvsLAR = CT - LAR,",
        "+ ",
        "                                 levels = design_matrix)",
        "> ",
        "fit <- lmFit(object = norm_filtered_data, design = design_matrix)",
        "> ",
        "fit_main <- contrasts.fit(fit = fit, contrasts = contrast_matrix)",
        "> ",
        "fit_main <- eBayes(fit = fit_main)",
        "> ",
        "top_table_CTvsFR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsFR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsDR)",
        "                 logFC  AveExpr         t      P.Value    adj.P.Val        B\n1423804_a_at  4.152361 8.974127  13.87326 1.082905e-12 2.596496e-09 18.76142\n1417867_at   -5.570799 4.939195 -13.57872 1.687680e-12 2.596496e-09 18.35935\n1422533_at    3.219092 7.930501  12.77831 5.861392e-12 6.011834e-09 17.22151\n1415993_at    4.830517 8.477170  12.32482 1.218896e-11 9.376360e-09 16.54615\n1423078_a_at  2.581030 9.915283  11.72674 3.303225e-11 2.032804e-08 15.61965\n1427229_at    2.855991 7.272321  10.02405 6.981862e-10",
        " 3.580532e-07 12.74124\n",
        "> ",
        "top_table_CTvsFR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsFR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsFR)",
        "                 logFC  AveExpr         t      P.Value    adj.P.Val        B\n1423804_a_at  4.152361 8.974127  13.87326 1.082905e-12 2.596496e-09 18.76142\n1417867_at   -5.570799 4.939195 -13.57872 1.687680e-12 2.596496e-09 18.35935\n1422533_at    3.219092 7.930501  12.77831 5.861392e-12 6.011834e-09 17.22151\n1415993_at    4.830517 8.477170  12.32482 1.218896e-11 9.376360e-09 16.54615\n1423078_a_at  2.581030 9.915283  11.72674 3.303225e-11 2.032804e-08 15.61965\n1427229_at    2.855991 7.272321  10.02405 6.981862e-10",
        " 3.580532e-07 12.74124\n",
        "> ",
        "top_table_CTvsAC <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsAC\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsAC)",
        "                 logFC   AveExpr         t      P.Value    adj.P.Val        B\n1449309_at    6.245552 10.559098  23.57166 1.165043e-17 3.584838e-14 29.48645\n1422533_at    3.541060  7.930501  15.71550 7.925101e-14 1.219277e-10 21.56726\n1423078_a_at  2.913477  9.915283  14.79963 2.812676e-13 2.884868e-10 20.37226\n1423804_a_at  3.791302  8.974127  14.16207 7.059370e-13 5.430420e-10 19.49721\n1419393_at   -2.967939  9.426668 -13.06325 3.737476e-12 2.088903e-09 17.89911\n1415993_at    4.560179  8.477170  13.00840 4.073259e-12",
        " 2.088903e-09 17.81619\n",
        "> ",
        "View(top_table_CTvsAC)",
        "> ",
        "top_table_CTvsAR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsAR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsAR)",
        "                  logFC  AveExpr         t      P.Value  adj.P.Val         B\n1419603_at    0.9195207 4.162454  5.119776 3.424077e-05 0.07685655 2.2757828\n1425314_at    1.1298871 6.311436  4.566914 1.356895e-04 0.07685655 1.0800607\n1428877_at   -0.9931278 9.646600 -4.488395 1.651095e-04 0.07685655 0.9089518\n1435280_at    1.2694616 5.200294  4.480052 1.685888e-04 0.07685655 0.8907603\n1450932_s_at  0.7900908 5.975929  4.468858 1.733726e-04 0.07685655 0.8663503\n1444435_at   -1.1882491 5.484836 -4.466826 1.742555e-04",
        " 0.07685655 0.8619186\n",
        "> ",
        "top_table_CTvsDHA <- topTable(fit = fit_main, ",
        "+ ",
        "                              number = nrow(fit_main), ",
        "+ ",
        "                              coef = \"CTvsDHA\", ",
        "+ ",
        "                              adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsDHA)",
        "                 logFC   AveExpr         t      P.Value    adj.P.Val        B\n1420531_at    8.329763 11.213872  27.73587 3.075611e-19 9.463654e-16 33.47240\n1420722_at    7.002047 11.467966  23.62122 1.111923e-17 1.710694e-14 30.22611\n1425645_s_at -6.516228  4.582176 -22.52430 3.191999e-17 3.273927e-14 29.24857\n1419759_at   -3.350095  4.765961 -19.32755 9.228286e-16 7.098859e-13 26.07130\n1422925_s_at -5.088689  6.173027 -18.96303 1.397222e-15 8.598504e-13 25.67406\n1449844_at    4.744581  8.950226  17.98705 4.396146e-15",
        " 2.254490e-12 24.57083\n",
        "> ",
        "top_table_CTvsDR <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsDR\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsDR)",
        "                 logFC   AveExpr         t      P.Value    adj.P.Val        B\n1417761_at   -2.429020 10.916912 -7.446630 1.395211e-07 0.0002163722 7.462092\n1439804_at   -1.341434  4.583314 -7.443046 1.406384e-07 0.0002163722 7.454880\n1425314_at    1.764063  6.311436  7.130205 2.839863e-07 0.0002912752 6.817635\n1444021_at   -1.220800  4.671305 -6.537503 1.113017e-06 0.0008174718 5.569612\n1456377_x_at  1.133715  8.652669  6.462110 1.328359e-06 0.0008174718 5.407193\n1432650_at   -1.536042  7.157575 -5.878611 5.338065e-06",
        " 0.0027375377 4.124468\n",
        "> ",
        "top_table_CTvsEFA <- topTable(fit = fit_main, ",
        "+ ",
        "                              number = nrow(fit_main), ",
        "+ ",
        "                              coef = \"CTvsEFA\", ",
        "+ ",
        "                              adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsEFA)",
        "                logFC   AveExpr        t      P.Value   adj.P.Val        B\n1425314_at   1.747076  6.311436 7.061543 3.319128e-07 0.001021296 6.588338\n1423130_a_at 1.431520  9.619549 6.406453 1.514293e-06 0.002329740 5.228184\n1419568_at   1.145823  6.078440 5.684050 8.556118e-06 0.008775725 3.658285\n1434677_at   0.928011  4.467739 5.361497 1.884701e-05 0.012470906 2.937454\n1418858_at   1.512716 11.356248 5.328196 2.045787e-05 0.012470906 2.862455\n1455387_at   1.004813  7.174018 5.251776 2.470181e-05 0.012470906",
        " 2.689983\n",
        "> ",
        "top_table_CTvsHF <- topTable(fit = fit_main, ",
        "+ ",
        "                             number = nrow(fit_main), ",
        "+ ",
        "                             coef = \"CTvsHF\", ",
        "+ ",
        "                             adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsHF)",
        "                 logFC   AveExpr         t      P.Value    adj.P.Val        B\n1417867_at   -3.093730  4.939195 -8.430996 1.664793e-08 5.122568e-05 9.541076\n1455387_at    1.517725  7.174018  7.932571 4.806618e-08 7.394982e-05 8.563114\n1450715_at   -1.454752 12.297627 -7.384738 1.601632e-07 1.642741e-04 7.444280\n1423257_at   -5.259562  8.782446 -6.663296 8.298607e-07 4.198533e-04 5.902594\n1415776_at   -1.496302  9.672289 -6.659092 8.380172e-07 4.198533e-04 5.893391\n1454067_a_at -1.235596  9.722149 -6.653587 8.488210e-07",
        " 4.198533e-04 5.881337\n",
        "> ",
        "top_table_CTvsLAR <- topTable(fit = fit_main, ",
        "+ ",
        "                              number = nrow(fit_main), ",
        "+ ",
        "                              coef = \"CTvsLAR\", ",
        "+ ",
        "                              adjust = \"fdr\") ",
        "> ",
        "head(top_table_CTvsLAR)",
        "                 logFC   AveExpr          t      P.Value    adj.P.Val         B\n1419582_at   -2.299585  6.733627 -13.172736 3.150398e-12 9.693773e-09 17.434387\n1425645_s_at -3.229885  4.582176 -11.164572 8.725127e-11 1.342361e-07 14.490481\n1425314_at    2.511220  6.311436  10.150154 5.506059e-10 5.647381e-07 12.811672\n1455454_at   -1.554958  9.297626  -8.284513 2.265687e-08 1.353281e-05  9.346512\n1449375_at   -1.397407 10.995465  -8.217726 2.609962e-08 1.353281e-05  9.212955\n1422438_at   -1.496162 11.052741",
        "  -8.212544 2.638832e-08 1.353281e-05  9.202564\n",
        "> ",
        "contrast_matrix <- makeContrasts(CTvsFR = CT - FR,",
        "+ ",
        "                                 CTvsAC = CT - AC,",
        "+ ",
        "                                 CTvsAR = CT - AR,",
        "+ ",
        "                                 CTvsDHA = CT - DHA,",
        "+ ",
        "                                 CTvsDR = CT - DR,",
        "+ ",
        "                                 CTvsEFA = CT - EFA,",
        "+ ",
        "                                 CTvsHF = CT - HF,",
        "+ ",
        "                                 CTvsLAR = CT - LAR,",
        "+ ",
        "                                 INT = (CT - FR) - (CT - AC) - (CT -AR) - (CT - DHA) ",
        "+ ",
        "                                       - (CT - DR) - (CT - EFA) - (CT - HF) - (CT - LAR), ",
        "+ ",
        "                                 levels = design_matrix)",
        "> ",
        "",
        "> ",
        "print(contrast_matrix)",
        "      Contrasts\nLevels CTvsFR CTvsAC CTvsAR CTvsDHA CTvsDR CTvsEFA CTvsHF CTvsLAR INT\n   FR      -1      0      0       0      0       0      0       0  -1\n   AC       0     -1      0       0      0       0      0       0   1\n   CT       1      1      1       1      1       1      1       1  -6\n   AR       0      0     -1       0      0       0      0       0   1\n   DHA      0      0      0      -1      0       0      0       0   1\n   DR       0      0      0       0     -1       0      0       0   1\n   EFA",
        "      0      0      0       0      0      -1      0       0   1\n   HF       0      0      0       0      0       0     -1       0   1\n   LAR      0      0      0       0      0       0      0      -1   1\n",
        "> ",
        "contrast_matrix <- makeContrasts(CTvsFR = CT - FR,",
        "+ ",
        "                                 CTvsAC = CT - AC,",
        "+ ",
        "                                 CTvsAR = CT - AR,",
        "+ ",
        "                                 CTvsDHA = CT - DHA,",
        "+ ",
        "                                 CTvsDR = CT - DR,",
        "+ ",
        "                                 CTvsEFA = CT - EFA,",
        "+ ",
        "                                 CTvsHF = CT - HF,",
        "+ ",
        "                                 CTvsLAR = CT - LAR,",
        "+ ",
        "                                 INT = (CT - FR) - (CT - AC) - (CT -AR) - (CT - DHA) - (CT - DR) - (CT - EFA) - (CT - HF) - (CT - LAR), ",
        "+ ",
        "                                 levels = design_matrix)",
        "> ",
        "print(contrast_matrix)",
        "      Contrasts\nLevels CTvsFR CTvsAC CTvsAR CTvsDHA CTvsDR CTvsEFA CTvsHF CTvsLAR INT\n   FR      -1      0      0       0      0       0      0       0  -1\n   AC       0     -1      0       0      0       0      0       0   1\n   CT       1      1      1       1      1       1      1       1  -6\n   AR       0      0     -1       0      0       0      0       0   1\n   DHA      0      0      0      -1      0       0      0       0   1\n   DR       0      0      0       0     -1       0      0       0   1\n   EFA",
        "      0      0      0       0      0      -1      0       0   1\n   HF       0      0      0       0      0       0     -1       0   1\n   LAR      0      0      0       0      0       0      0      -1   1\n",
        "> ",
        "contrast_matrix <- makeContrasts(CTvsFR = CT - FR,",
        "+ ",
        "                                 CTvsAC = CT - AC,",
        "+ ",
        "                                 CTvsAR = CT - AR,",
        "+ ",
        "                                 CTvsDHA = CT - DHA,",
        "+ ",
        "                                 CTvsDR = CT - DR,",
        "+ ",
        "                                 CTvsEFA = CT - EFA,",
        "+ ",
        "                                 CTvsHF = CT - HF,",
        "+ ",
        "                                 CTvsLAR = CT - LAR,",
        "+ ",
        "                                 INT = FR - AC - CT - AR - DHA - DR - EFA - HF - LAR, ",
        "+ ",
        "                                 levels = design_matrix)",
        "> ",
        "print(contrast_matrix)",
        "      Contrasts\nLevels CTvsFR CTvsAC CTvsAR CTvsDHA CTvsDR CTvsEFA CTvsHF CTvsLAR INT\n   FR      -1      0      0       0      0       0      0       0   1\n   AC       0     -1      0       0      0       0      0       0  -1\n   CT       1      1      1       1      1       1      1       1  -1\n   AR       0      0     -1       0      0       0      0       0  -1\n   DHA      0      0      0      -1      0       0      0       0  -1\n   DR       0      0      0       0     -1       0      0       0  -1\n   EFA",
        "      0      0      0       0      0      -1      0       0  -1\n   HF       0      0      0       0      0       0     -1       0  -1\n   LAR      0      0      0       0      0       0      0      -1  -1\n",
        "> ",
        "contrast_matrix <- makeContrasts(CTvsFR = CT - FR,",
        "+ ",
        "                                 CTvsAC = CT - AC,",
        "+ ",
        "                                 CTvsAR = CT - AR,",
        "+ ",
        "                                 CTvsDHA = CT - DHA,",
        "+ ",
        "                                 CTvsDR = CT - DR,",
        "+ ",
        "                                 CTvsEFA = CT - EFA,",
        "+ ",
        "                                 CTvsHF = CT - HF,",
        "+ ",
        "                                 CTvsLAR = CT - LAR,",
        "+ ",
        "                                 INT = (FR - AC) - (CT - AR) - (DHA - DR) - (EFA - HF) - LAR, ",
        "+ ",
        "                                 levels = design_matrix)",
        "> ",
        "print(contrast_matrix)",
        "      Contrasts\nLevels CTvsFR CTvsAC CTvsAR CTvsDHA CTvsDR CTvsEFA CTvsHF CTvsLAR INT\n   FR      -1      0      0       0      0       0      0       0   1\n   AC       0     -1      0       0      0       0      0       0  -1\n   CT       1      1      1       1      1       1      1       1  -1\n   AR       0      0     -1       0      0       0      0       0   1\n   DHA      0      0      0      -1      0       0      0       0  -1\n   DR       0      0      0       0     -1       0      0       0   1\n   EFA",
        "      0      0      0       0      0      -1      0       0  -1\n   HF       0      0      0       0      0       0     -1       0   1\n   LAR      0      0      0       0      0       0      0      -1  -1\n",
        "> ",
        "install.packages(\"citr\", dependencies = T)",
        "Installing package into ‘C:/Users/USER/Documents/R/win-library/3.6’\n(as ‘lib’ is unspecified)\n",
        "also installing the dependencies ‘bibtex’, ‘RefManageR’\n\n",
        "probando la URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/bibtex_0.4.2.2.zip'\n",
        "Content type 'application/zip'",
        " length 131604 bytes (128 KB)\n",
        "downloaded 128 KB\n\n",
        "probando la URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/RefManageR_1.2.12.zip'\n",
        "Content type 'application/zip'",
        " length 786065 bytes (767 KB)\n",
        "downloaded 767 KB\n\n",
        "probando la URL 'https://cran.rstudio.com/bin/windows/contrib/3.6/citr_0.3.2.zip'\n",
        "Content type 'application/zip'",
        " length 72509 bytes (70 KB)\n",
        "downloaded 70 KB\n\n",
        "package ‘bibtex’ successfully unpacked and MD5 sums checked\npackage ‘RefManageR’ successfully unpacked and MD5 sums checked\npackage ‘citr’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\USER\\AppData\\Local\\Temp\\Rtmpu0Qltx\\downloaded_packages\n",
        "> ",
        "",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "knitr::opts_chunk$set(root.dir = \"C:/Users/USER/Documents/Màster Bioestadística i Bioinfo/Análisis de datos Ómicos/PECS/ADO_PEC1_Marc_Garcia/\")",
        "> ",
        "",
        "> ",
        "media <- read.csv(\"other/media composition.csv\")",
        "> ",
        "View(media)",
        "> ",
        "media <- read.csv(\"other/media composition.csv\", header = T, row.names = 1, sep = \";\")",
        "> ",
        "View(media)",
        "> ",
        "media <- read.csv(file = \"other/media composition.csv\", ",
        "+ ",
        "                  header = T, ",
        "+ ",
        "                  row.names = 1, ",
        "+ ",
        "                  sep = \";\")",
        "> ",
        "library(knitr)",
        "> ",
        "library(kableExtra)",
        "> ",
        "getwd()",
        "[1] \"C:/Users/USER/Documents/Màster Bioestadística i Bioinfo/Análisis de datos Ómicos/PECS/ADO_PEC1_Marc_Garcia\"\n",
        "> ",
        "targets <- read.csv(file = \"data/targets.csv\", ",
        "+ ",
        "                    header = T, ",
        "+ ",
        "                    row.names = 1, ",
        "+ ",
        "                    sep = \";\")",
        "> ",
        "View(targets)",
        "> ",
        "media <- read.csv(file = \"other/media composition.csv\", ",
        "+ ",
        "                  header = T, ",
        "+ ",
        "                  row.names = 1, ",
        "+ ",
        "                  sep = \";\")",
        "> ",
        "View(media)",
        "> ",
        "quality <- readxl::read_xlsx(\"other/quality control.xlsx\")",
        "> ",
        "View(quality)",
        "> ",
        "library(citr)",
        "Warning message:\n",
        "package ‘citr’ was built under R version 3.6.3 \n",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        2
    ]
}