font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 3,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 4,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
for (i in 1:length(list_of_data)){
logFC <- list_of_tables[[i]]$logFC[list_of_tables[[i]]$adj.P.Val < 0.15]
names <- list_of_selected[[i]]
vec <- setNames(logFC, names)
genes_in <- list_of_data[[i]]
comparison <- comparisons_names[i]
enrich_result <- enrichPathway(gene = genes_in,
pvalueCutoff = 0.05,
readable = T,
pAdjustMethod = "fdr",
organism = "mouse",
universe = universe)
enrich_result <- setReadable(x = enrich_result, OrgDb = org.Mm.eg.db, keyType = "ENTREZID")
cat("##################################")
cat("\nComparison: ", comparison, "\n")
print(head(enrich_result))
if (length(rownames(enrich_result@result)) != 0){
write.csv(as.data.frame(enrich_result),
file = paste0("results/pathwayAnalysis/enrichedPathwayTables/", "ReactomePA.Results.", comparison, ".csv"),
row.names = FALSE)
tiff(filename = paste0("figures/barPlots/", "ReactomePABarplot.", comparison, ".tiff"),
width = 15,
height = 7,
res = 300,
units = "in")
print(barplot(height = enrich_result,
showCategory = 4,
font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 3,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 3,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
for (i in 1:length(list_of_data)){
logFC <- list_of_tables[[i]]$logFC[list_of_tables[[i]]$adj.P.Val < 0.15]
names <- list_of_selected[[i]]
vec <- setNames(logFC, names)
genes_in <- list_of_data[[i]]
comparison <- comparisons_names[i]
enrich_result <- enrichPathway(gene = genes_in,
pvalueCutoff = 0.05,
readable = T,
pAdjustMethod = "fdr",
organism = "mouse",
universe = universe)
enrich_result <- setReadable(x = enrich_result, OrgDb = org.Mm.eg.db, keyType = "ENTREZID")
cat("##################################")
cat("\nComparison: ", comparison, "\n")
print(head(enrich_result))
if (length(rownames(enrich_result@result)) != 0){
write.csv(as.data.frame(enrich_result),
file = paste0("results/pathwayAnalysis/enrichedPathwayTables/", "ReactomePA.Results.", comparison, ".csv"),
row.names = FALSE)
tiff(filename = paste0("figures/barPlots/", "ReactomePABarplot.", comparison, ".tiff"),
width = 15,
height = 7,
res = 300,
units = "in")
print(barplot(height = enrich_result,
showCategory = 4,
font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 2,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 2,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
for (i in 1:length(list_of_data)){
logFC <- list_of_tables[[i]]$logFC[list_of_tables[[i]]$adj.P.Val < 0.15]
names <- list_of_selected[[i]]
vec <- setNames(logFC, names)
genes_in <- list_of_data[[i]]
comparison <- comparisons_names[i]
enrich_result <- enrichPathway(gene = genes_in,
pvalueCutoff = 0.05,
readable = T,
pAdjustMethod = "fdr",
organism = "mouse",
universe = universe)
enrich_result <- setReadable(x = enrich_result, OrgDb = org.Mm.eg.db, keyType = "ENTREZID")
cat("##################################")
cat("\nComparison: ", comparison, "\n")
print(head(enrich_result))
if (length(rownames(enrich_result@result)) != 0){
write.csv(as.data.frame(enrich_result),
file = paste0("results/pathwayAnalysis/enrichedPathwayTables/", "ReactomePA.Results.", comparison, ".csv"),
row.names = FALSE)
tiff(filename = paste0("figures/barPlots/", "ReactomePABarplot.", comparison, ".tiff"),
width = 15,
height = 7,
res = 300,
units = "in")
print(barplot(height = enrich_result,
showCategory = 4,
font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 3,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 4,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
for (i in 1:length(list_of_data)){
logFC <- list_of_tables[[i]]$logFC[list_of_tables[[i]]$adj.P.Val < 0.15]
names <- list_of_selected[[i]]
vec <- setNames(logFC, names)
genes_in <- list_of_data[[i]]
comparison <- comparisons_names[i]
enrich_result <- enrichPathway(gene = genes_in,
pvalueCutoff = 0.05,
readable = T,
pAdjustMethod = "fdr",
organism = "mouse",
universe = universe)
enrich_result <- setReadable(x = enrich_result, OrgDb = org.Mm.eg.db, keyType = "ENTREZID")
cat("##################################")
cat("\nComparison: ", comparison, "\n")
print(head(enrich_result))
if (length(rownames(enrich_result@result)) != 0){
write.csv(as.data.frame(enrich_result),
file = paste0("results/pathwayAnalysis/enrichedPathwayTables/", "ReactomePA.Results.", comparison, ".csv"),
row.names = FALSE)
tiff(filename = paste0("figures/barPlots/", "ReactomePABarplot.", comparison, ".tiff"),
width = 15,
height = 7,
res = 300,
units = "in")
print(barplot(height = enrich_result,
showCategory = 5,
font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 5,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 4,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
for (i in 1:length(list_of_data)){
logFC <- list_of_tables[[i]]$logFC[list_of_tables[[i]]$adj.P.Val < 0.15]
names <- list_of_selected[[i]]
vec <- setNames(logFC, names)
genes_in <- list_of_data[[i]]
comparison <- comparisons_names[i]
enrich_result <- enrichPathway(gene = genes_in,
pvalueCutoff = 0.05,
readable = T,
pAdjustMethod = "fdr",
organism = "mouse",
universe = universe)
enrich_result <- setReadable(x = enrich_result, OrgDb = org.Mm.eg.db, keyType = "ENTREZID")
cat("##################################")
cat("\nComparison: ", comparison, "\n")
print(head(enrich_result))
if (length(rownames(enrich_result@result)) != 0){
write.csv(as.data.frame(enrich_result),
file = paste0("results/pathwayAnalysis/enrichedPathwayTables/", "ReactomePA.Results.", comparison, ".csv"),
row.names = FALSE)
tiff(filename = paste0("figures/barPlots/", "ReactomePABarplot.", comparison, ".tiff"),
width = 15,
height = 7,
res = 300,
units = "in")
print(barplot(height = enrich_result,
showCategory = ,
font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 5,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 5,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
for (i in 1:length(list_of_data)){
logFC <- list_of_tables[[i]]$logFC[list_of_tables[[i]]$adj.P.Val < 0.15]
names <- list_of_selected[[i]]
vec <- setNames(logFC, names)
genes_in <- list_of_data[[i]]
comparison <- comparisons_names[i]
enrich_result <- enrichPathway(gene = genes_in,
pvalueCutoff = 0.05,
readable = T,
pAdjustMethod = "fdr",
organism = "mouse",
universe = universe)
enrich_result <- setReadable(x = enrich_result, OrgDb = org.Mm.eg.db, keyType = "ENTREZID")
cat("##################################")
cat("\nComparison: ", comparison, "\n")
print(head(enrich_result))
if (length(rownames(enrich_result@result)) != 0){
write.csv(as.data.frame(enrich_result),
file = paste0("results/pathwayAnalysis/enrichedPathwayTables/", "ReactomePA.Results.", comparison, ".csv"),
row.names = FALSE)
tiff(filename = paste0("figures/barPlots/", "ReactomePABarplot.", comparison, ".tiff"),
width = 15,
height = 7,
res = 300,
units = "in")
print(barplot(height = enrich_result,
showCategory = 4,
font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 3,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 4,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
top_tab
top_tab[top_tab$adj.P.Val < 0.15]
top_tab[top_tab$adj.P.Val < 0.15, ]
top_tab["adj.P.Val"] < 0.15
selected_ids <- rownames(top_tab)[which_genes]
selected_ids
which_genes <- top_tab[top_tab$adj.P.Val < 0.15, ]
which_genes
selected_ids <- rownames(top_tab)[which_genes]
rwonames(which_genes)
rownames(which_genes)
entrez_ids <- select(x = mouse4302.db, keys = selected_ids, columns = c("ENTREZID"))
entrez_ids
entrez_ids <- entrez_ids$ENTREZID
list_of_selected[[i]] <- entrez_ids
names(list_of_selected)[i] <- names(list_of_tables)[i]
list_of_selected
sapply(list_of_selected, length)
mapped_genes2GO <- mappedkeys(x = org.Mm.egGO)
mapped_genes2KEGG <- mappedkeys(x = org.Mm.egPATH)
mapped_genes <- union(x = mapped_genes2GO,
y = mapped_genes2KEGG)
mapped_genes
mapped_genes
list_of_tables <- list(CTvsFR = top_table_CTvsFR,
CTvsAC  = top_table_CTvsAC,
CTvsAR = top_table_CTvsAR,
CTvsDR = top_table_CTvsDR,
CTvsEFA = top_table_CTvsEFA,
CTvsHF = top_table_CTvsHF,
CTvsLAR = top_table_CTvsLAR)
list_of_selected <- list()
for (i in 1:length(list_of_tables)){
# select the toptable
top_tab <- list_of_tables[[i]]
# select the genes to be included in the analysis
which_genes <- top_tab[top_tab$adj.P.Val < 0.15, ]
selected_ids <- rownames(which_genes)
# convert the ID to Entrez
entrez_ids <- select(x = mouse4302.db, keys = selected_ids, columns = c("ENTREZID"))
entrez_ids <- entrez_ids$ENTREZID
list_of_selected[[i]] <- entrez_ids
names(list_of_selected)[i] <- names(list_of_tables)[i]
}
sapply(list_of_selected, length)
mapped_genes2GO <- mappedkeys(x = org.Mm.egGO)
mapped_genes2KEGG <- mappedkeys(x = org.Mm.egPATH)
mapped_genes <- union(x = mapped_genes2GO,
y = mapped_genes2KEGG)
list_of_data <- list_of_selected
comparisons_names <- names(list_of_data)
universe <- mapped_genes
for (i in 1:length(list_of_data)){
logFC <- list_of_tables[[i]]$logFC[list_of_tables[[i]]$adj.P.Val < 0.15]
names <- list_of_selected[[i]]
vec <- setNames(logFC, names)
genes_in <- list_of_data[[i]]
comparison <- comparisons_names[i]
enrich_result <- enrichPathway(gene = genes_in,
pvalueCutoff = 0.05,
readable = T,
pAdjustMethod = "fdr",
organism = "mouse",
universe = universe)
enrich_result <- setReadable(x = enrich_result, OrgDb = org.Mm.eg.db, keyType = "ENTREZID")
cat("##################################")
cat("\nComparison: ", comparison, "\n")
print(head(enrich_result))
if (length(rownames(enrich_result@result)) != 0){
write.csv(as.data.frame(enrich_result),
file = paste0("results/pathwayAnalysis/enrichedPathwayTables/", "ReactomePA.Results.", comparison, ".csv"),
row.names = FALSE)
tiff(filename = paste0("figures/barPlots/", "ReactomePABarplot.", comparison, ".tiff"),
width = 15,
height = 7,
res = 300,
units = "in")
print(barplot(height = enrich_result,
showCategory = 4,
font.size = 8.5,
color = "p.adjust",
title = paste0("Reactome Pathway Analysis for ", comparison, ". Barplot")))
dev.off()
if (i == 4 | i == 7){
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 3,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
} else {
tiff(filename = paste0("figures/cnetPlots/", "ReactomePAcnetplot.", comparison, ".tiff"),
width = 7.5,
height = 7,
res = 300,
units = "in")
print(cnetplot(x = enrich_result,
node_label = "all",
showCategory = 4,
foldChange = vec,
layout = "kk",
circular = F))
dev.off()
}
}
}
citation("ReactomePA")
citation("DOSE")
citation("enrichplot")
fit_eb
res_selected
citation("stats")
install.packages("reticulate", dependencies = T)
